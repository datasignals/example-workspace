/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2019 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 */

/* -------------------------------------------------------------------------------------------------
 *
 *                             Codasip uRISC - compiler settings
 *
 * -------------------------------------------------------------------------------------------------
 */

#include "config.hcodal"

settings
{
    compiler
    {
        pointer_size = ADDR_W;

        stack_pointer = rf_gpr[GPR_SP];
        base_pointer  = rf_gpr[GPR_FP];
        return_address = rf_gpr[GPR_RETADDR];

        function_result = {
            rf_gpr[GPR_RETVAL],
            rf_gpr[GPR_RETVAL + 1],
            rf_gpr[GPR_RETVAL + 2],
            rf_gpr[GPR_RETVAL + 3]
        };

        function_params = {
            rf_gpr[GPR_RETVAL],
            rf_gpr[GPR_RETVAL + 1],
            rf_gpr[GPR_RETVAL + 2],
            rf_gpr[GPR_RETVAL + 3]
        };

    };

};
